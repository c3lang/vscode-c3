{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "C3",
  "fileTypes": [
    "c3",
    "c3i",
    "c3t"
  ],
  "scopeName": "source.c3",
  "patterns": [
    {
      "include": "#top_level"
    }
  ],
  "repository": {
    "top_level": {
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#modifier_keywords"
        },
        {
          "begin": "\\$(?:assert|include|echo|exec)\\b",
          "beginCaptures": {
            "0": {
              "name": "keyword.other.c3"
            }
          },
          "end": ";",
          "endCaptures": {
            "0": {
              "name": "punctuation.terminator.c3"
            }
          },
          "patterns": [
            {
              "include": "#comments"
            },
            {
              "include": "#expression"
            }
          ]
        },
        {
          "begin": "\\bmodule\\b",
          "beginCaptures": {
            "0": {
              "name": "keyword.declaration.module.c3"
            }
          },
          "end": ";",
          "endCaptures": {
            "0": {
              "name": "punctuation.terminator.c3"
            }
          },
          "patterns": [
            {
              "include": "#comments"
            },
            {
              "include": "#attribute"
            },
            {
              "include": "#path"
            },
            {
              "match": "(?:_*[a-z][_a-zA-Z0-9]*)",
              "name": "meta.path.c3"
            },
            {
              "include": "#generic_params"
            }
          ]
        },
        {
          "begin": "\\bimport\\b",
          "beginCaptures": {
            "0": {
              "name": "keyword.declaration.import.c3"
            }
          },
          "end": ";",
          "endCaptures": {
            "0": {
              "name": "punctuation.terminator.c3"
            }
          },
          "patterns": [
            {
              "include": "#comments"
            },
            {
              "include": "#attribute"
            },
            {
              "include": "#path"
            },
            {
              "match": "(?:_*[a-z][_a-zA-Z0-9]*)",
              "name": "meta.path.c3"
            }
          ]
        },
        {
          "include": "#function"
        },
        {
          "begin": "\\b(?:def|distinct)\\b",
          "beginCaptures": {
            "0": {
              "name": "keyword.declaration.type.c3"
            }
          },
          "end": ";",
          "endCaptures": {
            "0": {
              "name": "punctuation.terminator.c3"
            }
          },
          "patterns": [
            {
              "include": "#comments"
            },
            {
              "begin": "@(?:_*[A-Z][_A-Z0-9]*[a-z][_a-zA-Z0-9]*)",
              "beginCaptures": {
                "0": {
                  "name": "keyword.annotation.c3"
                }
              },
              "end": "(?=;)",
              "patterns": [
                {
                  "include": "#comments"
                },
                {
                  "include": "#parens"
                },
                {
                  "begin": "\\=",
                  "beginCaptures": {
                    "0": {
                      "name": "keyword.operator.assignment.c3"
                    }
                  },
                  "end": "(?=;)",
                  "patterns": [
                    {
                      "include": "#comments"
                    },
                    {
                      "include": "#attribute"
                    },
                    {
                      "begin": "\\{",
                      "beginCaptures": {
                        "0": {
                          "name": "meta.block.c3 punctuation.section.block.begin.c3"
                        }
                      },
                      "end": "\\}",
                      "endCaptures": {
                        "0": {
                          "name": "meta.block.c3 punctuation.section.block.end.c3"
                        }
                      },
                      "contentName": "meta.block.c3",
                      "patterns": [
                        {
                          "include": "#comments"
                        },
                        {
                          "include": "#attribute"
                        },
                        {
                          "include": "#punctuation"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "begin": "\\b(?:((?:_*[A-Z][_A-Z0-9]*[a-z][_a-zA-Z0-9]*))|((?:_*[a-z][_a-zA-Z0-9]*))|((?:_*[A-Z][_A-Z0-9]*)))\\b",
              "beginCaptures": {
                "1": {
                  "name": "support.type.c3"
                },
                "2": {
                  "name": "variable.global.c3"
                },
                "3": {
                  "name": "variable.other.constant.c3"
                }
              },
              "end": "(?=;)",
              "patterns": [
                {
                  "include": "#comments"
                },
                {
                  "include": "#attribute"
                },
                {
                  "begin": "\\=",
                  "beginCaptures": {
                    "0": {
                      "name": "keyword.operator.assignment.c3"
                    }
                  },
                  "end": "(?=;)",
                  "patterns": [
                    {
                      "include": "#comments"
                    },
                    {
                      "include": "#attribute"
                    },
                    {
                      "include": "#expression"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "include": "#structlike"
        },
        {
          "begin": "(?=\\b(?:enum|fault)\\b)",
          "end": "(?<=\\})",
          "patterns": [
            {
              "begin": "\\b(?:enum|fault)\\b",
              "beginCaptures": {
                "0": {
                  "name": "meta.enum.c3 keyword.declaration.enum.c3"
                }
              },
              "end": "(?=\\{)",
              "contentName": "meta.enum.c3",
              "patterns": [
                {
                  "include": "#comments"
                },
                {
                  "match": "\\b(?:_*[A-Z][_A-Z0-9]*[a-z][_a-zA-Z0-9]*)\\b",
                  "name": "entity.name.type.enum.c3"
                },
                {
                  "include": "#attribute"
                },
                {
                  "begin": ":",
                  "beginCaptures": {
                    "0": {
                      "name": "punctuation.separator.c3"
                    }
                  },
                  "end": "(?=\\{)",
                  "patterns": [
                    {
                      "include": "#comments"
                    },
                    {
                      "include": "#type"
                    },
                    {
                      "begin": "\\(",
                      "beginCaptures": {
                        "0": {
                          "name": "punctuation.section.group.begin.c3"
                        }
                      },
                      "end": "\\)",
                      "endCaptures": {
                        "0": {
                          "name": "punctuation.section.group.end.c3"
                        }
                      },
                      "contentName": "meta.group.c3",
                      "patterns": [
                        {
                          "include": "#comments"
                        },
                        {
                          "include": "#type"
                        },
                        {
                          "include": "#punctuation"
                        },
                        {
                          "match": "(?:_*[a-z][_a-zA-Z0-9]*)",
                          "name": "variable.parameter.c3"
                        }
                      ]
                    },
                    {
                      "include": "#attribute"
                    }
                  ]
                }
              ]
            },
            {
              "begin": "\\{",
              "beginCaptures": {
                "0": {
                  "name": "meta.enum.body.c3 meta.block.c3 punctuation.section.block.begin.c3"
                }
              },
              "end": "\\}",
              "endCaptures": {
                "0": {
                  "name": "meta.enum.body.c3 meta.block.c3 punctuation.section.block.end.c3"
                }
              },
              "contentName": "meta.enum.body.c3 meta.block.c3",
              "patterns": [
                {
                  "include": "#comments"
                },
                {
                  "begin": "\\=",
                  "beginCaptures": {
                    "0": {
                      "name": "keyword.operator.assignment.c3"
                    }
                  },
                  "end": "(?=,)",
                  "patterns": [
                    {
                      "include": "#expression"
                    }
                  ]
                },
                {
                  "include": "#attribute"
                },
                {
                  "match": "\\b(?:_*[A-Z][_A-Z0-9]*)\\b",
                  "name": "variable.other.enummember.c3"
                },
                {
                  "match": ",",
                  "name": "punctuation.separator.c3"
                }
              ]
            }
          ]
        },
        {
          "begin": "(?=\\binterface\\b)",
          "end": "(?<=\\})",
          "patterns": [
            {
              "begin": "\\binterface\\b",
              "beginCaptures": {
                "0": {
                  "name": "meta.interface.c3 keyword.declaration.interface.c3"
                }
              },
              "end": "(?=\\{)",
              "contentName": "meta.interface.c3",
              "patterns": [
                {
                  "include": "#comments"
                },
                {
                  "match": "\\b(?:_*[A-Z][_A-Z0-9]*[a-z][_a-zA-Z0-9]*)\\b",
                  "name": "entity.name.type.interface.c3"
                },
                {
                  "include": "#attribute"
                }
              ]
            },
            {
              "begin": "\\{",
              "beginCaptures": {
                "0": {
                  "name": "meta.interface.body.c3 meta.block.c3 punctuation.section.block.begin.c3"
                }
              },
              "end": "\\}",
              "endCaptures": {
                "0": {
                  "name": "meta.interface.body.c3 meta.block.c3 punctuation.section.block.end.c3"
                }
              },
              "contentName": "meta.interface.body.c3 meta.block.c3",
              "patterns": [
                {
                  "include": "#comments"
                },
                {
                  "match": ";",
                  "name": "punctuation.terminator.c3"
                },
                {
                  "include": "#function"
                }
              ]
            }
          ]
        },
        {
          "begin": "\\b(?:_*[A-Z][_A-Z0-9]*)\\b",
          "beginCaptures": {
            "0": {
              "name": "variable.other.constant"
            }
          },
          "end": ";",
          "endCaptures": {
            "0": {
              "name": "punctuation.terminator.c3"
            }
          },
          "patterns": [
            {
              "include": "#comments"
            },
            {
              "begin": "\\=",
              "beginCaptures": {
                "0": {
                  "name": "keyword.operator.assignment.c3"
                }
              },
              "end": "(?=;)",
              "patterns": [
                {
                  "include": "#expression"
                }
              ]
            }
          ]
        },
        {
          "include": "#declaration"
        }
      ]
    },
    "function_header": {
      "patterns": [
        {
          "include": "#type"
        },
        {
          "match": "\\.",
          "name": "punctuation.accessor.c3"
        },
        {
          "match": "\\@?(?:_*[a-z][_a-zA-Z0-9]*)",
          "name": "entity.name.function.c3"
        }
      ]
    },
    "function": {
      "begin": "(?=\\b(fn|macro)\\b)",
      "end": "(?<=\\})|(?=[;,)])",
      "patterns": [
        {
          "begin": "\\b(fn|macro)\\b",
          "beginCaptures": {
            "1": {
              "name": "meta.function.c3 keyword.declaration.function.c3"
            }
          },
          "end": "(?=\\()",
          "contentName": "meta.function.c3",
          "patterns": [
            {
              "include": "#comments"
            },
            {
              "include": "#function_header"
            }
          ]
        },
        {
          "begin": "\\(",
          "beginCaptures": {
            "0": {
              "name": "meta.function.parameters.c3 meta.group.c3 punctuation.section.group.begin.c3"
            }
          },
          "end": "\\)",
          "endCaptures": {
            "0": {
              "name": "meta.function.parameters.c3 meta.group.c3 punctuation.section.group.end.c3"
            }
          },
          "contentName": "meta.function.parameters.c3 meta.group.c3",
          "patterns": [
            {
              "include": "#comments"
            },
            {
              "include": "#type"
            },
            {
              "include": "#punctuation"
            },
            {
              "match": "&",
              "name": "keyword.operator.c3"
            },
            {
              "match": "\\.\\.\\.",
              "name": "keyword.operator.variadic.c3"
            },
            {
              "match": ";",
              "name": "punctuation.separator.c3"
            },
            {
              "begin": "(@(?:_*[a-z][_a-zA-Z0-9]*))\\s*(\\()",
              "beginCaptures": {
                "1": {
                  "name": "variable.parameter.c3"
                },
                "2": {
                  "name": "punctuation.section.group.begin.c3"
                }
              },
              "end": "\\)",
              "endCaptures": {
                "0": {
                  "name": "punctuation.section.group.end.c3"
                }
              },
              "contentName": "meta.group.c3",
              "patterns": [
                {
                  "include": "#comments"
                },
                {
                  "include": "#type"
                },
                {
                  "include": "#punctuation"
                }
              ]
            },
            {
              "begin": "([$#@]?(?:_*[a-z][_a-zA-Z0-9]*))",
              "beginCaptures": {
                "0": {
                  "name": "variable.parameter.c3"
                }
              },
              "end": "(?=[;,)])",
              "patterns": [
                {
                  "include": "#comments"
                },
                {
                  "include": "#attribute"
                },
                {
                  "match": "\\.\\.\\.",
                  "name": "keyword.operator.variadic.c3"
                },
                {
                  "begin": "\\=",
                  "beginCaptures": {
                    "0": {
                      "name": "keyword.operator.assignment.c3"
                    }
                  },
                  "end": "(?=[;,)])",
                  "patterns": [
                    {
                      "include": "#expression"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "begin": "(?<=\\))",
          "end": "(?=[{=;])",
          "contentName": "meta.function.c3",
          "patterns": [
            {
              "include": "#comments"
            },
            {
              "include": "#attribute"
            }
          ]
        },
        {
          "begin": "\\{",
          "beginCaptures": {
            "0": {
              "name": "meta.function.c3 meta.block.c3 punctuation.section.block.begin.c3"
            }
          },
          "end": "\\}",
          "endCaptures": {
            "0": {
              "name": "meta.function.c3 meta.block.c3 punctuation.section.block.end.c3"
            }
          },
          "contentName": "meta.function.c3 meta.block.c3",
          "patterns": [
            {
              "include": "#statements"
            }
          ]
        },
        {
          "begin": "\\=>",
          "beginCaptures": {
            "0": {
              "name": "meta.function.c3 keyword.declaration.function.arrow.c3"
            }
          },
          "end": "(?=[;,)])",
          "contentName": "meta.function.c3",
          "patterns": [
            {
              "include": "#expression"
            }
          ]
        }
      ]
    },
    "structlike": {
      "begin": "(?=\\b(?:(struct|bitstruct)|(union))\\b)",
      "end": "(?<=\\})",
      "patterns": [
        {
          "begin": "\\b(?:(struct|bitstruct)|(union))\\b",
          "beginCaptures": {
            "1": {
              "name": "meta.struct.c3 keyword.declaration.struct.c3"
            },
            "2": {
              "name": "meta.struct.c3 keyword.declaration.union.c3"
            }
          },
          "end": "(?=\\{)",
          "contentName": "meta.struct.c3",
          "patterns": [
            {
              "include": "#comments"
            },
            {
              "match": "(?:_*[A-Z][_A-Z0-9]*[a-z][_a-zA-Z0-9]*)",
              "name": "entity.name.type.struct.c3"
            },
            {
              "match": "(?:_*[a-z][_a-zA-Z0-9]*)",
              "name": "variable.other.member.c3"
            },
            {
              "include": "#attribute"
            },
            {
              "begin": ":",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.separator.c3"
                }
              },
              "end": "(?=\\{)",
              "patterns": [
                {
                  "include": "#comments"
                },
                {
                  "include": "#type"
                },
                {
                  "include": "#attribute"
                }
              ]
            },
            {
              "begin": "\\(",
              "beginCaptures": {
                "0": {
                  "name": "meta.group.c3 punctuation.section.group.begin.c3"
                }
              },
              "end": "\\)",
              "endCaptures": {
                "0": {
                  "name": "meta.group.c3 punctuation.section.group.end.c3"
                }
              },
              "contentName": "meta.group.c3",
              "patterns": [
                {
                  "include": "#comments"
                },
                {
                  "include": "#path"
                },
                {
                  "include": "#type"
                },
                {
                  "include": "#punctuation"
                }
              ]
            }
          ]
        },
        {
          "begin": "\\{",
          "beginCaptures": {
            "0": {
              "name": "meta.struct.body.c3 meta.block.c3 punctuation.section.block.begin.c3"
            }
          },
          "end": "\\}",
          "endCaptures": {
            "0": {
              "name": "meta.struct.body.c3 meta.block.c3 punctuation.section.block.end.c3"
            }
          },
          "contentName": "meta.struct.body.c3 meta.block.c3",
          "patterns": [
            {
              "include": "#comments"
            },
            {
              "include": "#structlike"
            },
            {
              "include": "#modifier_keywords"
            },
            {
              "include": "#type"
            },
            {
              "match": "(?:_*[a-z][_a-zA-Z0-9]*)",
              "name": "variable.other.member.c3"
            },
            {
              "include": "#attribute"
            },
            {
              "match": ";",
              "name": "punctuation.terminator.c3"
            },
            {
              "begin": ":",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.separator.c3"
                }
              },
              "end": "(?=;)",
              "patterns": [
                {
                  "include": "#expression"
                }
              ]
            }
          ]
        }
      ]
    },
    "builtin": {
      "patterns": [
        {
          "match": "(\\$\\$(?:_*[A-Z][_A-Z0-9]*))\\b|(\\$\\$(?:_*[a-z][_a-zA-Z0-9]*))\\b",
          "captures": {
            "1": {
              "name": "constant.language.c3"
            },
            "2": {
              "name": "entity.name.function.builtin.c3"
            }
          }
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "match": "\\$(?:alignof|and|append|assert|assignable|concat|default|defined|echo|embed|eval|error|exec|extnameof|feature|include|is_const|nameof|offsetof|or|qnameof|sizeof|stringify|vacount|vaconst|varef|vaarg|vaexpr|vasplat)\\b",
          "name": "keyword.other.ct.c3"
        },
        {
          "match": "\\$(?:case|else|endfor|endforeach|endif|endswitch|for|foreach|if|switch)\\b",
          "name": "keyword.control.ct.c3"
        },
        {
          "match": "\\b(?:assert|asm|catch|const|def|distinct|extern|tlocal|inline|import|module|interface|static|try|var)\\b",
          "name": "keyword.other.c3"
        },
        {
          "match": "\\b(?:break|case|continue|default|defer|do|else|for|foreach|foreach_r|if|nextcase|return|switch|while)\\b",
          "name": "keyword.control.c3"
        }
      ]
    },
    "modifier_keywords": {
      "patterns": [
        {
          "match": "\\b(?:const|extern|static|tlocal|inline)\\b",
          "name": "storage.modifier.c3"
        }
      ]
    },
    "punctuation": {
      "patterns": [
        {
          "match": ",",
          "name": "punctuation.separator.c3"
        },
        {
          "match": ":",
          "name": "punctuation.separator.c3"
        },
        {
          "match": ":(?!:)",
          "name": "punctuation.separator.c3"
        },
        {
          "match": "::|\\.(?!\\.\\.)",
          "name": "punctuation.accessor.c3"
        }
      ]
    },
    "constants": {
      "patterns": [
        {
          "match": "\\b(true|false|null)\\b",
          "name": "constant.language.c3"
        },
        {
          "match": "\\b(?:_*[A-Z][_A-Z0-9]*)\\b",
          "name": "variable.other.constant"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "match": "\\+\\=|-\\=|\\*\\=|/\\=|%\\=|&\\=|\\|\\=|\\^\\=|>>\\=|<<\\=",
          "name": "keyword.operator.assignment.augmented.c3"
        },
        {
          "match": "<\\=|>\\=|\\=\\=|<|>|\\!\\=",
          "name": "keyword.operator.comparison.c3"
        },
        {
          "match": "\\.\\.\\.",
          "name": "keyword.operator.variadic.c3"
        },
        {
          "match": "\\.\\.",
          "name": "keyword.operator.range.c3"
        },
        {
          "match": "\\+\\+|--",
          "name": "keyword.operator.arithmetic.c3"
        },
        {
          "match": "<<|>>|&&&?|\\|\\|\\|?",
          "name": "keyword.operator.arithmetic.c3"
        },
        {
          "match": "\\+|\\-|/|%|\\||\\^|~",
          "name": "keyword.operator.arithmetic.c3"
        },
        {
          "match": "\\=",
          "name": "keyword.operator.assignment.c3"
        },
        {
          "match": "!|\\?[?:]?|\\*|&|:",
          "name": "keyword.operator.c3"
        }
      ]
    },
    "path": {
      "match": "((?:_*[a-z][_a-zA-Z0-9]*))(::)",
      "captures": {
        "1": {
          "name": "meta.path.c3"
        },
        "2": {
          "name": "meta.path.c3 punctuation.separator.scope-resolution.c3"
        }
      }
    },
    "literals": {
      "patterns": [
        {
          "include": "#string_literal"
        },
        {
          "include": "#char_literal"
        },
        {
          "include": "#raw_string_literal"
        },
        {
          "include": "#real_literal"
        },
        {
          "include": "#integer_literal"
        }
      ]
    },
    "char_literal": {
      "begin": "'",
      "beginCaptures": {
        "0": {
          "name": "string.quoted.single.c3 punctuation.definition.string.begin.c3"
        }
      },
      "end": "'",
      "endCaptures": {
        "0": {
          "name": "string.quoted.single.c3 punctuation.definition.string.end.c3"
        }
      },
      "contentName": "string.quoted.single.c3",
      "patterns": [
        {
          "match": "\\\\.",
          "name": "constant.character.escape.c3"
        }
      ]
    },
    "string_literal": {
      "begin": "\"",
      "beginCaptures": {
        "0": {
          "name": "string.quoted.double.c3 punctuation.definition.string.begin.c3"
        }
      },
      "end": "\"",
      "endCaptures": {
        "0": {
          "name": "string.quoted.double.c3 punctuation.definition.string.end.c3"
        }
      },
      "contentName": "string.quoted.double.c3",
      "patterns": [
        {
          "match": "\\\\([0abefnrtv'\"\\\\]|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})",
          "name": "constant.character.escape.c3"
        }
      ]
    },
    "raw_string_literal": {
      "begin": "`",
      "beginCaptures": {
        "0": {
          "name": "string.quoted.other.c3 punctuation.definition.string.begin.c3"
        }
      },
      "end": "`(?!`)",
      "endCaptures": {
        "0": {
          "name": "string.quoted.other.c3 punctuation.definition.string.end.c3"
        }
      },
      "contentName": "string.quoted.other.c3",
      "patterns": [
        {
          "match": "``",
          "name": "constant.character.escape.c3"
        }
      ]
    },
    "real_literal": {
      "patterns": [
        {
          "match": "\\b[0-9](_?[0-9])*(?:[f](8|16|32|64|128)?)\\b",
          "name": "constant.numeric.float.c3"
        },
        {
          "match": "\\b(?:[0-9](_?[0-9])*[Ee][+-]?[0-9]+|[0-9](_?[0-9])*\\.[0-9](_?[0-9])*([Ee][+-]?[0-9]+)?)(?:(?:[f](8|16|32|64|128)?))?\\b",
          "name": "constant.numeric.float.c3"
        },
        {
          "match": "\\b(?:0[xX][a-fA-F0-9](_?[a-fA-F0-9])*[Pp][+-]?[0-9]+|0[xX][a-fA-F0-9](_?[a-fA-F0-9])*\\.[a-fA-F0-9](_?[a-fA-F0-9])*[Pp][+-]?[0-9]+)(?:[f](8|16|32|64|128)?)?\\b",
          "name": "constant.numeric.float.c3"
        }
      ]
    },
    "integer_literal": {
      "match": "\\b(?:[0-9](_?[0-9])*|0[xX][a-fA-F0-9](_?[a-fA-F0-9])*|0[oO][0-7](_?[0-7])*|0[bB][0-1](_?[0-1])*)(?:[ui](8|16|32|64|128)|[Uu][Ll]?|[Ll])?\\b",
      "name": "constant.numeric.integer.c3"
    },
    "comments": {
      "patterns": [
        {
          "include": "#line_comment"
        },
        {
          "include": "#block_comment"
        },
        {
          "include": "#doc_comment"
        }
      ]
    },
    "line_comment": {
      "match": "//.*$",
      "name": "comment.line.double-slash.c3"
    },
    "block_comment": {
      "begin": "/\\*(?!\\*)",
      "beginCaptures": {
        "0": {
          "name": "comment.block.c3 punctuation.definition.comment.begin.c3"
        }
      },
      "end": "\\*/",
      "endCaptures": {
        "0": {
          "name": "comment.block.c3 punctuation.definition.comment.end.c3"
        }
      },
      "contentName": "comment.block.c3",
      "patterns": [
        {
          "include": "#block_comment_body"
        }
      ]
    },
    "block_comment_body": {
      "patterns": [
        {
          "begin": "/\\*",
          "end": "\\*/",
          "patterns": [
            {
              "include": "#block_comment_body"
            }
          ]
        }
      ]
    },
    "doc_comment": {
      "begin": "<\\*",
      "beginCaptures": {
        "0": {
          "name": "comment.block.documentation.c3 punctuation.definition.comment.begin.c3"
        }
      },
      "end": "\\*>",
      "endCaptures": {
        "0": {
          "name": "comment.block.documentation.c3 punctuation.definition.comment.end.c3"
        }
      },
      "contentName": "comment.block.documentation.c3",
      "patterns": [
        {
          "include": "#doc_comment_body"
        }
      ]
    },
    "doc_comment_body": {
      "patterns": [
        {
          "begin": "/\\*",
          "end": "\\*/",
          "patterns": [
            {
              "include": "#block_comment_body"
            }
          ]
        },
        {
          "match": "@(param(\\s*\\[&?(in|out|inout)\\])?|return!?|require|fails|deprecated|ensure|pure)\\s",
          "name": "markup.bold"
        }
      ]
    },
    "type_suffix": {
      "patterns": [
        {
          "include": "#brackets"
        },
        {
          "match": "\\*",
          "name": "keyword.operator.address.c3"
        },
        {
          "match": "\\!",
          "name": "keyword.operator.c3"
        }
      ]
    },
    "type": {
      "patterns": [
        {
          "include": "#path"
        },
        {
          "begin": "\\b(void|bool|char|double|float|float16|int128|ichar|int|iptr|isz|long|short|uint128|uint|ulong|uptr|ushort|usz|float128|any|anyfault|typeid)\\b|(\\$?\\b(?:_*[A-Z][_A-Z0-9]*[a-z][_a-zA-Z0-9]*)\\b)",
          "beginCaptures": {
            "1": {
              "name": "storage.type.built-in.primitive.c3"
            },
            "2": {
              "name": "support.type.c3"
            }
          },
          "end": "(?![*\\[!\\s]|\\(\\<)",
          "patterns": [
            {
              "include": "#generic_params"
            },
            {
              "include": "#type_suffix"
            }
          ]
        },
        {
          "begin": "(\\$(?:typeof|typefrom|evaltype|vatype))\\b\\s*\\(",
          "beginCaptures": {
            "1": {
              "name": "storage.type.c3"
            }
          },
          "end": "\\)",
          "patterns": [
            {
              "include": "#expression"
            }
          ]
        },
        {
          "begin": "(\\$(?:vatype))\\b\\s*\\[",
          "beginCaptures": {
            "1": {
              "name": "storage.type.c3"
            }
          },
          "end": "\\]",
          "patterns": [
            {
              "include": "#expression"
            }
          ]
        },
        {
          "include": "#brackets"
        },
        {
          "match": "[*!]",
          "name": "keyword.operator.c3"
        }
      ]
    },
    "attribute": {
      "patterns": [
        {
          "begin": "(@(?:align|benchmark|bigendian|builtin|callconv|compact|const|deprecated|dynamic|export|extern|finalizer|if|inline|init|link|littleendian|local|maydiscard|naked|nodiscard|noinit|noinline|nopadding|noreturn|nosanitize|nostrip|obfuscate|operator|optional|overlap|packed|private|public|pure|reflect|safemacro|section|test|unused|used|wasm|weak|winmain|(?:_*[A-Z][_A-Z0-9]*[a-z][_a-zA-Z0-9]*)))\\s*(\\()",
          "end": "\\)",
          "beginCaptures": {
            "1": {
              "name": "meta.annotation.c3 keyword.annotation.c3"
            },
            "2": {
              "name": "meta.annotation.c3 meta.group.c3 punctuation.section.group.begin.c3"
            }
          },
          "endCaptures": {
            "0": {
              "name": "meta.annotation.c3 meta.group.c3 punctuation.section.group.end.c3"
            }
          },
          "contentName": "meta.annotation.c3 meta.group.c3",
          "patterns": [
            {
              "include": "#expression"
            }
          ]
        },
        {
          "match": "@(?:align|benchmark|bigendian|builtin|callconv|compact|const|deprecated|dynamic|export|extern|finalizer|if|inline|init|link|littleendian|local|maydiscard|naked|nodiscard|noinit|noinline|nopadding|noreturn|nosanitize|nostrip|obfuscate|operator|optional|overlap|packed|private|public|pure|reflect|safemacro|section|test|unused|used|wasm|weak|winmain|(?:_*[A-Z][_A-Z0-9]*[a-z][_a-zA-Z0-9]*))",
          "name": "meta.annotation.c3 keyword.annotation.c3"
        }
      ]
    },
    "declaration": {
      "patterns": [
        {
          "begin": "\\bvar\\b",
          "beginCaptures": {
            "0": {
              "name": "storage.type.var.c3"
            }
          },
          "end": ";",
          "endCaptures": {
            "0": {
              "name": "punctuation.terminator.c3"
            }
          },
          "patterns": [
            {
              "match": "\\$(?:_*[A-Z][_A-Z0-9]*[a-z][_a-zA-Z0-9]*)",
              "name": "support.type.c3"
            },
            {
              "include": "#declaration_after_type"
            }
          ]
        },
        {
          "begin": "(?=\\$(typeof|typefrom|vatype|evaltype)\\b)",
          "end": ";",
          "endCaptures": {
            "0": {
              "name": "punctuation.terminator.c3"
            }
          },
          "patterns": [
            {
              "include": "#type"
            },
            {
              "include": "#declaration_after_type"
            }
          ]
        },
        {
          "begin": "(?=\\$?\\b(?:_*[A-Z][_A-Z0-9]*[a-z][_a-zA-Z0-9]*)\\b|\\b(?:void|bool|char|double|float|float16|int128|ichar|int|iptr|isz|long|short|uint128|uint|ulong|uptr|ushort|usz|float128|any|anyfault|typeid)\\b)",
          "end": ";",
          "endCaptures": {
            "0": {
              "name": "punctuation.terminator.c3"
            }
          },
          "patterns": [
            {
              "include": "#type"
            },
            {
              "include": "#declaration_after_type"
            }
          ]
        }
      ]
    },
    "declaration_after_type": {
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#generic_params"
        },
        {
          "match": "(?<!#)\\$?\\b(?:_*[a-z][_a-zA-Z0-9]*)\\b",
          "name": "variable.other.c3"
        },
        {
          "match": "\\b(?:_*[A-Z][_A-Z0-9]*)\\b",
          "name": "variable.other.constant"
        },
        {
          "include": "#attribute"
        },
        {
          "begin": "\\=",
          "beginCaptures": {
            "0": {
              "name": "keyword.operator.assignment.c3"
            }
          },
          "end": "(?=;)",
          "patterns": [
            {
              "include": "#expression"
            }
          ]
        }
      ]
    },
    "control_statements": {
      "patterns": [
        {
          "begin": "\\$for\\b",
          "beginCaptures": {
            "0": {
              "name": "keyword.control.ct.c3"
            }
          },
          "end": "(?<=\\))",
          "patterns": [
            {
              "begin": "\\(",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.section.group.begin.c3"
                }
              },
              "end": "\\)",
              "endCaptures": {
                "0": {
                  "name": "punctuation.section.group.end.c3"
                }
              },
              "patterns": [
                {
                  "include": "#statements"
                }
              ]
            }
          ]
        },
        {
          "begin": "\\bfor\\b",
          "beginCaptures": {
            "0": {
              "name": "keyword.control.c3"
            }
          },
          "end": "(?<=\\))",
          "patterns": [
            {
              "begin": "\\(",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.section.group.begin.c3"
                }
              },
              "end": "\\)",
              "endCaptures": {
                "0": {
                  "name": "punctuation.section.group.end.c3"
                }
              },
              "patterns": [
                {
                  "include": "#statements"
                }
              ]
            }
          ]
        },
        {
          "begin": "\\$(?:case|default|if)\\b",
          "beginCaptures": {
            "0": {
              "name": "keyword.control.ct.c3"
            }
          },
          "end": ":",
          "endCaptures": {
            "0": {
              "name": "punctuation.separator.c3"
            }
          },
          "patterns": [
            {
              "include": "#expression"
            }
          ]
        },
        {
          "begin": "\\b(?:case|default)\\b",
          "beginCaptures": {
            "0": {
              "name": "keyword.control.c3"
            }
          },
          "end": ":",
          "endCaptures": {
            "0": {
              "name": "punctuation.separator.c3"
            }
          },
          "patterns": [
            {
              "include": "#expression"
            }
          ]
        }
      ]
    },
    "statements": {
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#modifier_keywords"
        },
        {
          "match": ";",
          "name": "punctuation.terminator.c3"
        },
        {
          "include": "#control_statements"
        },
        {
          "include": "#declaration"
        },
        {
          "include": "#expression"
        },
        {
          "include": "#block"
        }
      ]
    },
    "variable": {
      "match": "(?<!#)\\$?\\b(?:_*[a-z][_a-zA-Z0-9]*)\\b",
      "name": "variable.other.c3"
    },
    "expression": {
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#function"
        },
        {
          "include": "#constants"
        },
        {
          "include": "#builtin"
        },
        {
          "include": "#literals"
        },
        {
          "include": "#operators"
        },
        {
          "include": "#keywords"
        },
        {
          "include": "#type"
        },
        {
          "include": "#generic_params"
        },
        {
          "include": "#path"
        },
        {
          "include": "#function_call"
        },
        {
          "include": "#attribute"
        },
        {
          "include": "#variable"
        },
        {
          "include": "#parens"
        },
        {
          "include": "#brackets"
        },
        {
          "include": "#expression_block"
        },
        {
          "include": "#initializer_list"
        },
        {
          "include": "#punctuation"
        }
      ]
    },
    "function_call": {
      "begin": "([@#]?(?:_*[a-z][_a-zA-Z0-9]*))(?=\\s*\\((?!<))",
      "beginCaptures": {
        "1": {
          "name": "entity.name.function.c3"
        }
      },
      "end": "\\)",
      "endCaptures": {
        "0": {
          "name": "meta.group.c3 punctuation.section.group.end.c3"
        }
      },
      "patterns": [
        {
          "begin": "\\(",
          "beginCaptures": {
            "0": {
              "name": "meta.group.c3 punctuation.section.group.begin.c3"
            }
          },
          "end": "(?=\\))",
          "contentName": "meta.group.c3",
          "patterns": [
            {
              "include": "#comments"
            },
            {
              "match": "(?<=[(\\s,])(\\.)([$#]?(?:_*[a-z][_a-zA-Z0-9]*))",
              "captures": {
                "1": {
                  "name": "punctuation.separator.c3"
                },
                "2": {
                  "name": "variable.parameter.c3"
                }
              }
            },
            {
              "include": "#expression"
            },
            {
              "include": "#punctuation"
            },
            {
              "match": ";",
              "name": "punctuation.separator.c3"
            }
          ]
        }
      ]
    },
    "block": {
      "patterns": [
        {
          "begin": "\\{(?!\\|)",
          "beginCaptures": {
            "0": {
              "name": "meta.block.c3 punctuation.section.block.begin.c3"
            }
          },
          "end": "(?<!\\|)\\}",
          "endCaptures": {
            "0": {
              "name": "meta.block.c3 punctuation.section.block.end.c3"
            }
          },
          "contentName": "meta.block.c3",
          "patterns": [
            {
              "include": "#statements"
            }
          ]
        }
      ]
    },
    "parens": {
      "patterns": [
        {
          "begin": "\\(",
          "beginCaptures": {
            "0": {
              "name": "meta.group.c3 punctuation.section.group.begin.c3"
            }
          },
          "end": "\\)",
          "endCaptures": {
            "0": {
              "name": "meta.group.c3 punctuation.section.group.end.c3"
            }
          },
          "contentName": "meta.group.c3",
          "patterns": [
            {
              "include": "#expression"
            }
          ]
        }
      ]
    },
    "brackets": {
      "patterns": [
        {
          "begin": "\\[<?",
          "beginCaptures": {
            "0": {
              "name": "meta.brackets.c3 punctuation.section.brackets.begin.c3"
            }
          },
          "end": ">?\\]",
          "endCaptures": {
            "0": {
              "name": "meta.brackets.c3 punctuation.section.brackets.end.c3"
            }
          },
          "contentName": "meta.brackets.c3",
          "patterns": [
            {
              "include": "#expression"
            }
          ]
        }
      ]
    },
    "generic_params": {
      "patterns": [
        {
          "begin": "\\(<",
          "end": ">\\)",
          "beginCaptures": {
            "0": {
              "name": "meta.generic.c3 punctuation.definition.generic.begin.c3"
            }
          },
          "endCaptures": {
            "0": {
              "name": "meta.generic.c3 punctuation.definition.generic.end.c3"
            }
          },
          "contentName": "meta.generic.c3",
          "patterns": [
            {
              "include": "#expression"
            }
          ]
        }
      ]
    },
    "expression_block": {
      "patterns": [
        {
          "begin": "\\{\\|",
          "beginCaptures": {
            "0": {
              "name": "meta.block.c3 punctuation.section.block.begin.c3"
            }
          },
          "end": "\\|\\}",
          "endCaptures": {
            "0": {
              "name": "meta.block.c3 punctuation.section.block.end.c3"
            }
          },
          "contentName": "meta.block.c3",
          "patterns": [
            {
              "include": "#statements"
            }
          ]
        }
      ]
    },
    "initializer_list": {
      "patterns": [
        {
          "begin": "\\{",
          "beginCaptures": {
            "0": {
              "name": "meta.block.c3 punctuation.section.block.begin.c3"
            }
          },
          "end": "\\}",
          "endCaptures": {
            "0": {
              "name": "meta.block.c3 punctuation.section.block.end.c3"
            }
          },
          "contentName": "meta.block.c3",
          "patterns": [
            {
              "include": "#expression"
            }
          ]
        }
      ]
    }
  }
}